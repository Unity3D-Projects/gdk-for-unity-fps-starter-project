package improbable.gdk.movement;

import "from_gdk_packages/com.improbable.gdk.standardtypes/standardtypes.schema";

type ClientRequest {
	improbable.gdk.standardtypes.IntDelta movement = 1;
	int32 timestamp = 2;
	float applied_dilation = 3;
	bool jump_pressed = 4;
	bool forward_pressed = 5;
	bool back_pressed = 6;
	bool left_pressed = 7;
	bool right_pressed = 8;
	bool sprint_pressed = 9;
	bool aim_pressed = 10;
	int32 camera_pitch = 11;
	int32 camera_yaw = 12;
}

type ServerResponse {
	improbable.gdk.standardtypes.IntAbsolute position = 1;
	int32 timestamp = 2;
	int32 applied_dilation = 3;
	int32 next_dilation = 4;
	int32 yaw = 5;
	int32 pitch = 6;
	bool aiming = 7;
}

type RotationUpdate {
	int32 yaw = 1;
	int32 pitch = 2;
	int32 roll = 3;
	float time_delta = 4;
}

component ClientMovement {
  id = 2020;

  ClientRequest latest = 1;
	event ClientRequest client_input;
}

component ServerMovement {
  id = 2021;

  ServerResponse latest = 1;
	event ServerResponse server_movement;
  event RotationUpdate forced_rotation;
}

component ClientRotation {
  id = 2022;

  RotationUpdate latest = 1;
}
